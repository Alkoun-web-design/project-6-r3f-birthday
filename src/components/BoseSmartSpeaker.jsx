/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Author: minedesel (https://sketchfab.com/minedesel)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/bose-smart-speaker-f06207cbe22e49529d0c54b518e82ac5
Title: Bose Smart Speaker
*/

import React, { useRef } from 'react'
import { useGLTF } from '@react-three/drei'

export function BoseSmartSpeaker(props) {

  const { nodes, materials } = useGLTF('/bose_smart_speaker_optimized.glb')
  const speakerRef = useRef();
  function playMusic() {
  if (props.musicRef.current) {
    if (!props.musicRef.current.paused) {
      props.musicRef.current.pause();
    } else {
      props.musicRef.current.play();
    }
  }
}

  return (
    <group {...props} className="hover:cursor-pointer" onClick={playMusic} dispose={null} ref={speakerRef}>
      <group rotation={[-Math.PI / 2, 0, 0]} scale={0.072}>
        <group rotation={[Math.PI / 2, 0, 0]} scale={0.01}>
          <group position={[0, 14.076, -57.867]} rotation={[-Math.PI / 2, 0, 0]} scale={100}>
            <mesh
              castShadow
              receiveShadow
              geometry={nodes.Plane_USB_slot_0.geometry}
              material={materials.USB_slot}
            />
            <mesh
              castShadow
              receiveShadow
              geometry={nodes.Plane_base_bot_holes_0.geometry}
              material={materials.base_bot_holes}
            />
          </group>
          <group position={[0, 303.772, 0]} rotation={[-Math.PI / 2, 0, 0]} scale={100}>
            <mesh
              castShadow
              receiveShadow
              geometry={nodes.base_144_verts001_top_icons_0.geometry}
              material={materials.top_icons}
            />
            <mesh
              castShadow
              receiveShadow
              geometry={nodes.base_144_verts001_emission_0.geometry}
              material={materials.emission}
            />
          </group>
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.chromeCircle001_emission_0.geometry}
            material={materials.emission}
            position={[0, 292.429, 0]}
            rotation={[-Math.PI / 2, 0, 0]}
            scale={[64.495, 64.495, 63.366]}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.soutienAnse003_black_gloss_0.geometry}
            material={materials.black_gloss}
            position={[82.251, 249.987, 0]}
            rotation={[-Math.PI / 2, Math.PI / 2, 0]}
            scale={134.33}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.base_144_booled_top_base_top_holes_0.geometry}
            material={materials.base_top_holes}
            rotation={[-Math.PI / 2, 0, 0]}
            scale={100}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.base_144_bot_A001_base_bot_holes_0.geometry}
            material={materials.base_bot_holes}
            rotation={[-Math.PI / 2, 0, 0]}
            scale={100}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.base_144_bot_B001_black_0.geometry}
            material={materials.black}
            rotation={[-Math.PI / 2, 0, 0]}
            scale={100}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.base_144_booled_top003_logo_patch_0.geometry}
            material={materials.logo_patch}
            rotation={[-Math.PI / 2, 0, 0]}
            scale={100}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.anse_anse_0.geometry}
            material={materials.anse}
            position={[68.631, 261.327, 0]}
            rotation={[2.347, 0, 0]}
            scale={100}
          />
        </group>
      </group>
    </group>
  )
}

useGLTF.preload('/bose_smart_speaker_optimized.glb')

